class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int m=matrix.size();
        int n=matrix[0].size();
        int top=0, left=0;
        int dir=0;
        int right=n-1, bottom=m-1;
        
        vector<int>ans;
         while(left<=right && top<=bottom)
        {
            if(dir==0){
                for(int i=left; i<=right; i++)
                {
                    ans.push_back(matrix[top][i]);
                }
                top++;
            }
            if(dir==1){
                for(int i=top; i<=bottom; i++)
                {
                    ans.push_back(matrix[i][right]);
                }
                right--;
            }
            if(dir==2){
                for(int i=right; i>=left; i--)
                {
                    ans.push_back(matrix[bottom][i]);
                }
                bottom--;
            }
            if(dir==3){
                for(int i=bottom; i>=top; i--)
                {
                    ans.push_back(matrix[i][left]);
                }
                left++;
            }
            dir=(dir+1)%4;
        }
        return ans;
    }
};
